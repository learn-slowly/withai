name: Update Indexes

on:
  push:
    branches: 
      - main
    paths:
      - 'content-production/**/*.md'
      - 'foreign-lang/**/*.md'
      - 'webdev/**/*.md'
      - '.github/workflows/update-indexes.yml'

jobs:
  update-indexes:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytz

    - name: Update indexes
      run: |
        python3 - <<EOF
        import os
        from datetime import datetime
        import pytz
        import re
        import glob
        
        def get_korean_time():
            kst = pytz.timezone('Asia/Seoul')
            now = datetime.now(kst)
            return now.strftime('%Y-%m-%d %H:%M:%S')
            
        def is_date_format(filename):
            # 20250101.md 형식인지 확인
            pattern = r'^\d{8}\.md$'
            return bool(re.match(pattern, filename))
            
        def update_index_file(index_path, folder_path, is_foreign_lang=False):
            print(f"Checking {index_path} for updates...")
            
            if not os.path.exists(index_path):
                print(f"Warning: {index_path} does not exist")
                return
                
            with open(index_path, 'r', encoding='utf-8') as f:
                lines = f.readlines()
            
            new_lines = []
            updated = False
            existing_dates = set()
            
            if is_foreign_lang:
                en_path = os.path.join(folder_path, 'en')
                jp_path = os.path.join(folder_path, 'jp')
                
                in_english = False
                in_japanese = False
                
                for line in lines:
                    if line.strip() == '## English':
                        in_english = True
                        in_japanese = False
                        new_lines.append(line)
                        if os.path.exists(en_path):
                            en_files = [f for f in os.listdir(en_path) if is_date_format(f)]
                            en_files.sort(reverse=True)
                            for f in en_files:
                                date = f[:8]
                                formatted_date = f"{date[:4]}-{date[4:6]}-{date[6:8]}"
                                if formatted_date not in existing_dates:
                                    new_lines.append(f"- [{formatted_date}](en/{f})\n")
                                    existing_dates.add(formatted_date)
                                    updated = True
                    elif line.strip() == '## Japanese':
                        in_english = False
                        in_japanese = True
                        new_lines.append(line)
                        if os.path.exists(jp_path):
                            jp_files = [f for f in os.listdir(jp_path) if is_date_format(f)]
                            jp_files.sort(reverse=True)
                            for f in jp_files:
                                date = f[:8]
                                formatted_date = f"{date[:4]}-{date[4:6]}-{date[6:8]}"
                                if formatted_date not in existing_dates:
                                    new_lines.append(f"- [{formatted_date}](jp/{f})\n")
                                    existing_dates.add(formatted_date)
                                    updated = True
                    elif line.startswith('#### Last updated:'):
                        new_lines.append(f'#### Last updated: {get_korean_time()}\n')
                        updated = True
                    elif not (in_english and line.startswith('- 202')) and not (in_japanese and line.startswith('- 202')):
                        new_lines.append(line)
            else:
                for line in lines:
                    if line.startswith('# '):
                        new_lines.append(line)
                        new_lines.append(f'#### Last updated: {get_korean_time()}\n')
                        if os.path.exists(folder_path):
                            files = [f for f in os.listdir(folder_path) if is_date_format(f)]
                            files.sort(reverse=True)
                            for f in files:
                                date = f[:8]
                                formatted_date = f"{date[:4]}-{date[4:6]}-{date[6:8]}"
                                if formatted_date not in existing_dates:
                                    new_lines.append(f"- [{formatted_date}]({f})\n")
                                    existing_dates.add(formatted_date)
                                    updated = True
                    elif not line.startswith('#### Last updated:') and not line.startswith('- 202'):
                        new_lines.append(line)
            
            if updated:
                print(f"Writing updates to {index_path}")
                with open(index_path, 'w', encoding='utf-8') as f:
                    f.writelines(new_lines)
                print(f"Updated {index_path}")
        
        # Get changed files first
        import subprocess
        result = subprocess.run(['git', 'diff', '--name-only', 'HEAD^', 'HEAD'], 
                             capture_output=True, text=True)
        changed_files = result.stdout.splitlines()
        print("Changed files:", changed_files)
        
        # Update indexes based on changes
        if any(f.startswith('content-production/') for f in changed_files):
            update_index_file('content-production/index.md', 'content-production')
        
        if any(f.startswith('foreign-lang/') for f in changed_files):
            update_index_file('foreign-lang/index.md', 'foreign-lang', True)
        
        if any(f.startswith('webdev/') for f in changed_files):
            update_index_file('webdev/index.md', 'webdev')
            
        # Update README.md last
        if os.path.exists('README.md'):
            print("Updating README.md")
            with open('README.md', 'r', encoding='utf-8') as f:
                lines = f.readlines()
            
            new_lines = []
            for line in lines:
                if line.startswith('### Last updated:'):
                    new_lines.append(f'### Last updated: {get_korean_time()}\n')
                else:
                    new_lines.append(line)
            
            with open('README.md', 'w', encoding='utf-8') as f:
                f.writelines(new_lines)
            print("Updated README.md")
        EOF

    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A
        git diff --quiet && git diff --staged --quiet || git commit -m "Update indexes"
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }} 